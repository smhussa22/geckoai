// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_MIGRATION_DATABASE_URL")
}

enum CalendarVisibility {
  DEFAULT
  PUBLIC
  PRIVATE
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}

enum Plan {
  FREE
  PLUS
}

model User {
  id                String   @id
  email             String   @unique
  name              String?
  firstName         String?
  picture           String?
  plan              Plan     @default(FREE)
  storageLimitBytes BigInt   @default(104857600)
  storageUsedBytes  BigInt   @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  token     GoogleToken?
  calendars Calendar[]
}

model GoogleToken {
  userId       String   @id
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String
  refreshToken String?
  scope        String?
  createdAt    DateTime @default(now())
  expiresAt    DateTime
  updatedAt    DateTime @updatedAt
}

model Calendar {
  id                String             @id @default(cuid())
  googleId          String
  ownerId           String
  owner             User               @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  name              String
  description       String?
  icon              String?
  color             String?
  defaultVisibility CalendarVisibility @default(PRIVATE)
  isPublic          Boolean            @default(false)
  publicId          String?            @unique
  summary           String?

  isPrimary         Boolean            @default(false)
  lastMessageAt     DateTime           @default(now())
  deletedAt         DateTime?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  events            Event[]
  messages          Message[]
  tasks Task[]

  @@unique([ownerId, googleId])
  @@index([ownerId])
  @@index([lastMessageAt])
}

model Event {
  id          String             @id @default(cuid())
  googleId    String
  calendarId  String
  calendar    Calendar           @relation(fields: [calendarId], references: [id], onDelete: Cascade)

  name        String
  description String?
  start       DateTime
  end         DateTime
  visibility  CalendarVisibility @default(DEFAULT)

  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  @@unique([calendarId, googleId])
  @@index([calendarId, start])
}

model Task {

  id          String             @id @default(cuid())
  googleId    String
  calendarId  String
  calendar    Calendar           @relation(fields: [calendarId], references: [id], onDelete: Cascade)

  title       String
  description String?
  due         DateTime?


  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  @@unique([calendarId, googleId])
  @@index([calendarId, due])

}

model Message {
  id         String       @id @default(cuid())
  calendarId String
  calendar   Calendar     @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  role       MessageRole
  content    String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([calendarId, createdAt])
}
